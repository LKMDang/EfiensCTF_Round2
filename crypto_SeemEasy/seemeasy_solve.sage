n = 0x1a7cc9f85d483e16040a943b0fbe635f91b6b11a03bc645feeb4d37fcdde2adc7f4ac23f29551334f16a2faf8675977cc9ccfdf981157e32aa2858e28c68354c652d6e93034afcce1288da72928f87e46cb9c585852c954045adbe9dcd5609aff087d6aa7fbb391c6b922b9faef6a1ac2da4ce7eace71641f719049f9227d21d
c = 0x16514c70d440c9052e5191c6b6d05880fd6576aaa03711311a5d361195b9ffb791be65f1fc40ddc1aa75d9262bb4589fbf20a914f08ab9d3f6c329345f83bbb1f88522e4a339fb59e65709e536e752430373d8e649e376c09c4646677e7b74db9c463cfa551756ac7baa43a95ef1df25933ac20cf3a01d52545933053b950247
e = 0x10006 / 2

p = 4312786190040291036550438673724971590062850705846846309354438515390354238310754941733006083573388386032539416898683338787300084377868976955840648690846001
q = n / p

phi = lcm(p-1, q-1)
d = inverse_mod(Integer(e), Integer(phi))
flag_2 = pow(c, d, n)

a = mod(flag_2, p).sqrt()
b = mod(flag_2, q).sqrt()
flag = CRT([Integer(a), Integer(b)], [Integer(p), Integer(q)])

print format(flag,'x').decode('hex')
